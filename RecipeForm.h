//---------------------------------------------------------------------------

#ifndef RecipeFormH
#define RecipeFormH
//---------------------------------------------------------------------------
#include <Classes.hpp>
#include <Controls.hpp>
#include <StdCtrls.hpp>
#include <Forms.hpp>
#include "LMDControl.hpp"
#include "LMDCustomBevelPanel.hpp"
#include "LMDCustomControl.hpp"
#include "LMDCustomPanel.hpp"
#include "LMDCustomPanelFill.hpp"
#include "LMDCustomParentPanel.hpp"
#include "LMDCustomSheetControl.hpp"
#include "LMDPageControl.hpp"
#include <ExtCtrls.hpp>
#include <Grids.hpp>
#include "LMDCustomTrackBar.hpp"
#include "LMDTrackBar.hpp"
#include <Buttons.hpp>
#include "LMDButton.hpp"
#include "LMDCustomButton.hpp"
#include <Graphics.hpp>
//---------------------------------------------------------------------------
class TfrmRecipe : public TForm
{
__published:	// IDE-managed Components
        TLMDPageControl *pcRecipe;
        TLMDTabSheet *tsSelectingRecipe;
        TLMDTabSheet *tsReferenceImage;
        TLMDTabSheet *tsInspectionParameter;
        TLMDTabSheet *tsParticleInspection;
        TPanel *pnlRecipeSelect;
        TGroupBox *GroupBox22;
        TLabel *Label39;
        TLabel *Label40;
        TLabel *Label41;
        TLabel *Label42;
        TLabel *Label43;
        TLabel *Label44;
        TLabel *Label45;
        TLabel *Label46;
        TLabel *Label47;
        TLabel *Label48;
        TLabel *Label49;
        TLabel *Label50;
        TLabel *Label51;
        TLabel *Label52;
        TLabel *Label53;
        TLabel *Label54;
        TLabel *Label55;
        TLabel *Label56;
        TLabel *Label57;
        TLabel *Label58;
        TLabel *Label59;
        TLabel *Label60;
        TLabel *Label61;
        TLabel *Label62;
        TLabel *Label63;
        TLabel *Label64;
        TLabel *Label65;
        TLabel *Label66;
        TLabel *Label67;
        TLabel *Label68;
        TLabel *Label69;
        TLabel *Label70;
        TLabel *Label71;
        TLabel *Label1;
        TLabel *Label2;
        TLabel *Label3;
        TPanel *pnlPort;
        TPanel *pnlCassetteID;
        TGroupBox *GroupBox23;
        TPanel *Panel21;
        TPanel *Panel22;
        TPanel *Panel23;
        TPanel *Panel24;
        TPanel *Panel25;
        TPanel *Panel26;
        TPanel *Panel27;
        TPanel *Panel28;
        TPanel *Panel29;
        TPanel *Panel30;
        TPanel *Panel31;
        TPanel *Panel32;
        TPanel *Panel33;
        TPanel *Panel34;
        TPanel *Panel35;
        TPanel *Panel36;
        TPanel *Panel37;
        TPanel *Panel38;
        TPanel *Panel39;
        TPanel *Panel40;
        TPanel *Panel41;
        TPanel *Panel42;
        TPanel *Panel43;
        TPanel *Panel44;
        TPanel *Panel45;
        TPanel *pnlRecipeID25;
        TPanel *pnlWaferTop25;
        TPanel *pnlWaferBackEdge25;
        TPanel *pnlWaferBackCenter25;
        TPanel *pnlWaferMicro25;
        TPanel *pnlWaferWaferID25;
        TPanel *pnlRecipeID24;
        TPanel *pnlWaferTop24;
        TPanel *pnlWaferBackEdge24;
        TPanel *pnlWaferBackCenter24;
        TPanel *pnlWaferMicro24;
        TPanel *pnlWaferWaferID24;
        TPanel *pnlRecipeID23;
        TPanel *pnlWaferTop23;
        TPanel *pnlWaferBackEdge23;
        TPanel *pnlWaferBackCenter23;
        TPanel *pnlWaferMicro23;
        TPanel *pnlWaferWaferID23;
        TPanel *pnlRecipeID22;
        TPanel *pnlWaferTop22;
        TPanel *pnlWaferBackEdge22;
        TPanel *pnlWaferBackCenter22;
        TPanel *pnlWaferMicro22;
        TPanel *pnlWaferWaferID22;
        TPanel *pnlRecipeID21;
        TPanel *pnlWaferTop21;
        TPanel *pnlWaferBackEdge21;
        TPanel *pnlWaferBackCenter21;
        TPanel *pnlWaferMicro21;
        TPanel *pnlWaferWaferID21;
        TPanel *pnlRecipeID20;
        TPanel *pnlWaferTop20;
        TPanel *pnlWaferBackEdge20;
        TPanel *pnlWaferBackCenter20;
        TPanel *pnlWaferMicro20;
        TPanel *pnlWaferWaferID20;
        TPanel *pnlRecipeID19;
        TPanel *pnlWaferTop19;
        TPanel *pnlWaferBackEdge19;
        TPanel *pnlWaferBackCenter19;
        TPanel *pnlWaferMicro19;
        TPanel *pnlWaferWaferID19;
        TPanel *pnlRecipeID18;
        TPanel *pnlWaferTop18;
        TPanel *pnlWaferBackEdge18;
        TPanel *pnlWaferBackCenter18;
        TPanel *pnlWaferMicro18;
        TPanel *pnlWaferWaferID18;
        TPanel *pnlRecipeID17;
        TPanel *pnlWaferTop17;
        TPanel *pnlWaferBackEdge17;
        TPanel *pnlWaferBackCenter17;
        TPanel *pnlWaferMicro17;
        TPanel *pnlWaferWaferID17;
        TPanel *pnlRecipeID16;
        TPanel *pnlWaferTop16;
        TPanel *pnlWaferBackEdge16;
        TPanel *pnlWaferBackCenter16;
        TPanel *pnlWaferMicro16;
        TPanel *pnlWaferWaferID16;
        TPanel *pnlRecipeID15;
        TPanel *pnlWaferTop15;
        TPanel *pnlWaferBackEdge15;
        TPanel *pnlWaferBackCenter15;
        TPanel *pnlWaferMicro15;
        TPanel *pnlWaferWaferID15;
        TPanel *pnlRecipeID14;
        TPanel *pnlWaferTop14;
        TPanel *pnlWaferBackEdge14;
        TPanel *pnlWaferBackCenter14;
        TPanel *pnlWaferMicro14;
        TPanel *pnlWaferWaferID14;
        TPanel *pnlRecipeID13;
        TPanel *pnlWaferTop13;
        TPanel *pnlWaferBackEdge13;
        TPanel *pnlWaferBackCenter13;
        TPanel *pnlWaferMicro13;
        TPanel *pnlWaferWaferID13;
        TPanel *pnlRecipeID12;
        TPanel *pnlWaferTop12;
        TPanel *pnlWaferBackEdge12;
        TPanel *pnlWaferBackCenter12;
        TPanel *pnlWaferMicro12;
        TPanel *pnlWaferWaferID12;
        TPanel *pnlRecipeID11;
        TPanel *pnlWaferTop11;
        TPanel *pnlWaferBackEdge11;
        TPanel *pnlWaferBackCenter11;
        TPanel *pnlWaferMicro11;
        TPanel *pnlWaferWaferID11;
        TPanel *pnlRecipeID10;
        TPanel *pnlWaferTop10;
        TPanel *pnlWaferBackEdge10;
        TPanel *pnlWaferBackCenter10;
        TPanel *pnlWaferMicro10;
        TPanel *pnlWaferWaferID10;
        TPanel *pnlRecipeID9;
        TPanel *pnlWaferTop09;
        TPanel *pnlWaferBackEdge09;
        TPanel *pnlWaferBackCenter09;
        TPanel *pnlWaferMicro09;
        TPanel *pnlWaferWaferID09;
        TPanel *pnlRecipeID8;
        TPanel *pnlWaferTop08;
        TPanel *pnlWaferBackEdge08;
        TPanel *pnlWaferBackCenter08;
        TPanel *pnlWaferMicro08;
        TPanel *pnlWaferWaferID08;
        TPanel *pnlRecipeID7;
        TPanel *pnlWaferTop07;
        TPanel *pnlWaferBackEdge07;
        TPanel *pnlWaferBackCenter07;
        TPanel *pnlWaferMicro07;
        TPanel *pnlWaferWaferID07;
        TPanel *pnlRecipeID6;
        TPanel *pnlWaferTop06;
        TPanel *pnlWaferBackEdge06;
        TPanel *pnlWaferBackCenter06;
        TPanel *pnlWaferMicro06;
        TPanel *pnlWaferWaferID06;
        TPanel *pnlRecipeID5;
        TPanel *pnlWaferTop05;
        TPanel *pnlWaferBackEdge05;
        TPanel *pnlWaferBackCenter05;
        TPanel *pnlWaferMicro05;
        TPanel *pnlWaferWaferID05;
        TPanel *pnlRecipeID4;
        TPanel *pnlWaferTop04;
        TPanel *pnlWaferBackEdge04;
        TPanel *pnlWaferBackCenter04;
        TPanel *pnlWaferMicro04;
        TPanel *pnlWaferWaferID04;
        TPanel *pnlRecipeID3;
        TPanel *pnlWaferTop03;
        TPanel *pnlWaferBackEdge03;
        TPanel *pnlWaferBackCenter03;
        TPanel *pnlWaferMicro03;
        TPanel *pnlWaferWaferID03;
        TPanel *pnlRecipeID2;
        TPanel *pnlWaferTop02;
        TPanel *pnlWaferBackEdge02;
        TPanel *pnlWaferBackCenter02;
        TPanel *pnlWaferMicro02;
        TPanel *pnlWaferWaferID02;
        TPanel *pnlRecipeID1;
        TPanel *pnlWaferTop01;
        TPanel *pnlWaferBackEdge01;
        TPanel *pnlWaferBackCenter01;
        TPanel *pnlWaferMicro01;
        TPanel *pnlWaferWaferID01;
        TPanel *Panel1;
        TPanel *Panel2;
        TPanel *Panel3;
        TGroupBox *GroupBox1;
        TPanel *pnlAllTop;
        TPanel *pnlAllWaferID;
        TPanel *pnlAllBackCenter;
        TPanel *pnlAllMicro;
        TPanel *pnlAllRestore;
        TGroupBox *GroupBox2;
        TPanel *pnlConfirmRecipe;
        TPanel *pnlStartInspection;
        TPanel *pnlEndInspection;
        TPanel *pnlDisplayResult;
        TGroupBox *GroupBox24;
        TPanel *pnlAdminstrator;
        TPanel *pnlOperator;
        TGroupBox *GroupBox25;
        TPanel *pnlRemote;
        TPanel *pnlLineStatus;
        TPanel *pnlLocal;
        TGroupBox *GroupBox26;
        TGroupBox *GroupBox27;
        TPanel *Panel207;
        TPanel *Panel208;
        TPanel *Panel209;
        TPanel *Panel210;
        TGroupBox *gbPort2Mode;
        TPanel *Panel211;
        TPanel *Panel212;
        TPanel *Panel213;
        TPanel *Panel214;
        TGroupBox *gbTransferStatus;
        TGroupBox *GroupBox30;
        TGroupBox *gbPort2OP;
        TGroupBox *GroupBox32;
        TPanel *Panel221;
        TPanel *Panel222;
        TGroupBox *GroupBox33;
        TPanel *Panel223;
        TPanel *Panel224;
        TGroupBox *gbRecipeSelect;
        TCheckBox *cbContinuousInspection;
        TPanel *pnlCancelCassette;
        TLabel *Label37;
        TEdit *edRecipeID;
        TButton *btnBatchSelect;
        TLabel *Label4;
        TPanel *pnlSlot;
        TScrollBar *sbSlot;
        TLabel *Label5;
        TPanel *pnlTo;
        TScrollBar *sbTo;
        TStringGrid *sgRecipeSelection;
        TPanel *Panel17;
        TLabel *Label6;
        TLabel *Label38;
        TSpeedButton *SpeedButton24;
        TSpeedButton *SpeedButton31;
        TPanel *Panel16;
        TImage *Image5;
        TEdit *Edit1;
        TLabel *Label7;
        TComboBox *ComboBox1;
        TPanel *Panel15;
        TLabel *Label10;
        TComboBox *ComboBox2;
        TPanel *Panel225;
        TGroupBox *GroupBox3;
        TGroupBox *GroupBox4;
        TGroupBox *GroupBox6;
        TGroupBox *GroupBox11;
        TPanel *Panel229;
        TScrollBar *ScrollBar3;
        TGroupBox *GroupBox12;
        TPanel *Panel230;
        TLabel *Label284;
        TLabel *Label283;
        TLMDTrackBar *tbLED2CH1;
        TRadioGroup *RadioGroup1;
        TLabel *Label14;
        TLabel *Label15;
        TGroupBox *GroupBox5;
        TGroupBox *GroupBox13;
        TPanel *Panel226;
        TScrollBar *ScrollBar4;
        TGroupBox *GroupBox14;
        TLabel *Label16;
        TLabel *Label17;
        TPanel *Panel231;
        TLabel *Label18;
        TLabel *Label19;
        TLMDTrackBar *LMDTrackBar3;
        TRadioGroup *RadioGroup2;
        TGroupBox *GroupBox15;
        TGroupBox *GroupBox16;
        TPanel *Panel232;
        TScrollBar *ScrollBar5;
        TGroupBox *GroupBox17;
        TLabel *Label20;
        TLabel *Label21;
        TPanel *Panel233;
        TLabel *Label22;
        TLabel *Label23;
        TLMDTrackBar *LMDTrackBar4;
        TGroupBox *GroupBox7;
        TPanel *Panel227;
        TScrollBar *ScrollBar6;
        TGroupBox *GroupBox8;
        TButton *Button2;
        TButton *Button3;
        TButton *Button4;
        TButton *Button5;
        TGroupBox *GroupBox18;
        TButton *Button6;
        TButton *Button7;
        TButton *Button8;
        TButton *Button9;
        TButton *Button10;
        TGroupBox *GroupBox9;
        TPanel *Panel228;
        TScrollBar *ScrollBar7;
        TLabel *Label8;
        TButton *btnStartMicro;
        TGroupBox *GroupBox10;
        TGroupBox *GroupBox19;
        TPanel *Panel234;
        TPanel *Panel235;
        TPanel *Panel236;
        TGroupBox *gbPort2Status;
        TPanel *Panel237;
        TPanel *Panel238;
        TPanel *Panel239;
        TLMDButton *btnCassetteLoad;
        TPanel *pnlCassetteLoad;
        TLMDButton *btnCassette2Load;
        TPanel *pnlCassette2Load;
        TGroupBox *GroupBox21;
        TPanel *pnlCassetteStatus;
        TLabel *Label483;
        TLabel *Label484;
        TLabel *Label485;
        TLabel *Label486;
        TLabel *Label487;
        TLabel *Label489;
        TPanel *Panel216;
        TPanel *pnlTray25;
        TPanel *pnlTray24;
        TPanel *pnlTray23;
        TPanel *pnlTray22;
        TPanel *pnlTray21;
        TPanel *pnlTray20;
        TPanel *pnlTray19;
        TPanel *pnlTray18;
        TPanel *pnlTray17;
        TPanel *pnlTray16;
        TPanel *pnlTray15;
        TPanel *pnlTray14;
        TPanel *pnlTray13;
        TPanel *pnlTray12;
        TPanel *pnlTray11;
        TPanel *pnlTray10;
        TPanel *pnlTray9;
        TPanel *pnlTray8;
        TPanel *pnlTray7;
        TPanel *pnlTray6;
        TPanel *pnlTray5;
        TPanel *pnlTray4;
        TPanel *pnlTray3;
        TPanel *pnlTray2;
        TPanel *pnlTray1;
        TPanel *Panel215;
        TShape *Shape5;
        TShape *Shape7;
        TShape *Shape8;
        TShape *Shape9;
        TShape *Shape10;
        TLabel *Label337;
        TLabel *Label338;
        TLabel *Label348;
        TLabel *Label349;
        TLabel *Label350;
        TPanel *Panel217;
        TPanel *pnlPortNo;
        TPanel *pnlLoadOK;
        TPanel *pnlLoadCancel;
        TPanel *pnlCassette1ID;
        TPanel *pnlCassette2ID;
        TMemo *mmError;
        TPanel *Panel4;
        TPanel *pnlMessage;
        TImage *imClose;
        TGroupBox *gbWaferStatus;
        TPanel *pnlWaferRobotInformation;
        TPanel *Panel6;
        TPanel *pnlWaferAlignerInformation;
        TPanel *Panel82;
        TPanel *pnlWaferMacroInformation;
        TPanel *Panel7;
        TPanel *pnlWaferChuckInformation;
        TPanel *pnlChuckStatus;
        TCheckBox *cbPause;
        TPanel *pnlSlotNo;
        TShape *Shape1;
        TLabel *Label9;
        TLMDButton *btnCloseInspection;
        TPanel *Panel11;
        TEdit *edLotID;
        TLabel *Label11;
        TLabel *Label12;
        TLabel *Label13;
        TLabel *Label24;
        TLabel *Label25;
        TLabel *Label26;
        TPanel *pnlLoadReset;
        TPanel *Panel5;
        TLabel *Label27;
        TPanel *Panel8;
        TLabel *Label28;
        TPanel *Panel9;
        TLabel *Label29;
        TPanel *Panel10;
        TEdit *edDeviceName;
        TEdit *edLotIDFromWaferID;
        TButton *btnResetAlarm;
        TButton *btnResetBuzzer;
        void __fastcall FormShow(TObject *Sender);
        void __fastcall sgRecipeSelectionDrawCell(TObject *Sender,
          int ACol, int ARow, TRect &Rect, TGridDrawState State);
        void __fastcall FormClose(TObject *Sender, TCloseAction &Action);
        void __fastcall btnCassetteLoadClick(TObject *Sender);
        void __fastcall btnCassette2LoadClick(TObject *Sender);
        void __fastcall pnlLoadOKClick(TObject *Sender);
        void __fastcall pnlLoadCancelClick(TObject *Sender);
        void __fastcall pnlAllTopClick(TObject *Sender);
        void __fastcall pnlAllWaferIDClick(TObject *Sender);
        void __fastcall pnlAllBackCenterClick(TObject *Sender);
        void __fastcall pnlAllMicroClick(TObject *Sender);
        void __fastcall pnlAllRestoreClick(TObject *Sender);
        void __fastcall pnlWaferTop25Click(TObject *Sender);
        void __fastcall pnlWaferBackEdge25Click(TObject *Sender);
        void __fastcall pnlWaferBackCenter25Click(TObject *Sender);
        void __fastcall pnlWaferMicro25Click(TObject *Sender);
        void __fastcall pnlWaferWaferID25Click(TObject *Sender);
        void __fastcall btnBatchSelectClick(TObject *Sender);
        void __fastcall sgRecipeSelectionClick(TObject *Sender);
        void __fastcall btnStartMicroClick(TObject *Sender);
        void __fastcall pnlStartInspectionClick(TObject *Sender);
        void __fastcall pnlEndInspectionClick(TObject *Sender);
        void __fastcall pnlConfirmRecipeClick(TObject *Sender);
        void __fastcall FormMouseMove(TObject *Sender, TShiftState Shift,
          int X, int Y);
        void __fastcall imCloseClick(TObject *Sender);
        void __fastcall cbPauseClick(TObject *Sender);
        void __fastcall btnCloseInspectionClick(TObject *Sender);
        void __fastcall pnlLoadResetClick(TObject *Sender);
        void __fastcall pnlRemoteClick(TObject *Sender);
        void __fastcall pnlLocalClick(TObject *Sender);
        void __fastcall btnResetAlarmClick(TObject *Sender);
        void __fastcall btnResetBuzzerClick(TObject *Sender);
private:	// User declarations
public:		// User declarations
        __fastcall TfrmRecipe(TComponent* Owner);

        int CassetteIDConfirm;
        bool boolInInspection;

   void __fastcall TfrmRecipe::UpdateResult();
   void __fastcall TfrmRecipe::CreateRecipeID();
   void __fastcall TfrmRecipe::UpdateRecipe(AnsiString recipename);
   // 3023 3 22 - chc Clear to Mapping Data
   void __fastcall TfrmRecipe::ClearMapData();

   // 2023 3 31 - chc
   bool boolLP1Cancel;
   bool boolLP2Cancel;

   // 2023 4 25 - chc CST Report
   void __fastcall TfrmRecipe::GenerateCSTReport();
   // Judge: 0-None, 1-Pass, 2-Reject
   // Status: 0-None, 1-NonSelect, 2-Selected
   struct RESULT_STRU {
      AnsiString WaferID;
      AnsiString TopMacro;
      AnsiString BackMacro;
      AnsiString Micro;
      int DefectNo;
      double Yield;
      int Status;
      AnsiString RecipeName;
   };
   struct RESULT_STRU InspectResult[25];
   void __fastcall TfrmRecipe::InitInspectResult();


};
//---------------------------------------------------------------------------
extern PACKAGE TfrmRecipe *frmRecipe;
//---------------------------------------------------------------------------
#endif
